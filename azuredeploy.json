{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "websiteName": {
            "type": "String",
            "metadata": {
                "description": "Globally unique name of the function app. All resource names are derived from this."
            }
        },
        "containerDefinition": {
            "type": "string",
            "defaultValue": "DOCKER",
            "allowedValues": [
                "DOCKER",
                "COMPOSE",
                "KUBE"
            ],
            "metadata": {
                "description": "How the container image(s) are defined, use DOCKER for a single image, COMPOSE for a Docker Compose yaml file or KUBE for a Kubernetes Service file"
            }
        },
        "containerImageName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the container to deploy. Leave empty to not to deploy an image"
            }
        },
        "acrSku":{
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "The SKU of Container Registry"
            }
        },
        "containerRegistryName":{
            "type": "string",
            "metadata": {
                "description": "Name of the Azure container registry"
            }
        },
        "containerRegistryUsername":{
            "type": "string",
            "metadata": {
                "description": "Userame for accessing the Azure container registry"
            }
        },
        "containerRegistryPassword":{
            "type": "securestring",
            "metadata": {
                "description": "Password for accessing the Azure container registry"
            }
        },
        "deployContainerRegistry":{
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Create the container (set to false if you already have ACR)"
            }
        },
        "aspSku":{
            "type": "string",
            "defaultValue": "S1",
            "metadata": {
                "description": "The SKU of App Service Plan"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ]
        },
        "storageAccountKind": {
            "type": "string",
            "defaultValue": "StorageV2",
            "allowedValues": [
                "Storage",
                "StorageV2",
                "BlobStorage"
            ]
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "app_insights_name": "[concat(parameters('websiteName'), '-ai')]",
        "storage_account_name": "[concat(replace(parameters('websiteName'),'-', ''), 'str')]",
        "app_service_plan_name": "[concat(parameters('websiteName'), '-asp')]",
        "image_fx_kind": "[if(equals(parameters('containerImageName'),''),'linux','linux,container')]",
        "image_fx_version": "[if(equals(parameters('containerImageName'),''),'',concat(parameters('containerDefinition'),'|',parameters('containerImageName')))]"
    },
    "resources": [
        {
            "name": "[parameters('containerRegistryName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "location": "[parameters('location')]",
            "condition": "[parameters('deployContainerRegistry')]",
            "apiVersion": "2019-05-01",
            "sku": {
                "name": "[parameters('acrSku')]"
            },
            "properties": {
                "adminUserEnabled": true
            }
        },
        {
            "type": "Microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('app_insights_name')]",
            "location": "[parameters('location')]",
            "kind": "web",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('websiteName'))]": "Resource"
            },
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('app_insights_name')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storage_account_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "[parameters('storageAccountKind')]",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('app_service_plan_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('aspSku')]"
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('websiteName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
                "[resourceId('Microsoft.insights/components', variables('app_insights_name'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('app_service_plan_name'))]"
            ],
            "kind": "[variables('image_fx_kind')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('app_service_plan_name'))]",
                "httpsOnly": true,
                "siteConfig": {
                    "linuxFxVersion": "[variables('image_fx_version')]",
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/', variables('app_insights_name'))).InstrumentationKey]"
                        },
                        {
                            "name": "AZURE_STORAGE_CONNECTION_STRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storage_account_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name')),'2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[concat('https://', parameters('containerRegistryName'), '.azurecr.io')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[parameters('containerRegistryUsername')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[parameters('containerRegistryPassword')]"
                        }
                    ]
                },
                "reserved": true
            }
        }
    ]
}